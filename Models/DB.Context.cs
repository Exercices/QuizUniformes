//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuizUniformes.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RhUniformesEntities : DbContext
    {
        public RhUniformesEntities()
            : base("name=RhUniformesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Almacen> Almacen { get; set; }
        public virtual DbSet<Cat_Articulos> Cat_Articulos { get; set; }
        public virtual DbSet<Cat_Empleados> Cat_Empleados { get; set; }
        public virtual DbSet<Cat_Estatus> Cat_Estatus { get; set; }
        public virtual DbSet<Cat_Grupos> Cat_Grupos { get; set; }
        public virtual DbSet<Cat_Tallas> Cat_Tallas { get; set; }
        public virtual DbSet<Cat_TipoEmpleados> Cat_TipoEmpleados { get; set; }
        public virtual DbSet<Cat_TiposArticulos> Cat_TiposArticulos { get; set; }
        public virtual DbSet<Cat_TiposEntradas> Cat_TiposEntradas { get; set; }
        public virtual DbSet<Cat_TiposTallas> Cat_TiposTallas { get; set; }
        public virtual DbSet<EntradaAlmacen> EntradaAlmacen { get; set; }
        public virtual DbSet<SalidaAlmacen> SalidaAlmacen { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<vw_EntradasAlmacen> vw_EntradasAlmacen { get; set; }
        public virtual DbSet<vw_ExistenciasAlmacen> vw_ExistenciasAlmacen { get; set; }
        public virtual DbSet<vw_ListadoArticulos> vw_ListadoArticulos { get; set; }
        public virtual DbSet<vw_SalidasAlmacen> vw_SalidasAlmacen { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_EntradaAlmacen(Nullable<int> idAlmacen, Nullable<int> idArticulo, Nullable<int> idTipoTalla, Nullable<int> idTalla, Nullable<int> idTipoEntrada, Nullable<int> cantidad, Nullable<int> idEmpleado, Nullable<int> idOrdenCompra, Nullable<int> idReconteo, string descripcion)
        {
            var idAlmacenParameter = idAlmacen.HasValue ?
                new ObjectParameter("IdAlmacen", idAlmacen) :
                new ObjectParameter("IdAlmacen", typeof(int));
    
            var idArticuloParameter = idArticulo.HasValue ?
                new ObjectParameter("IdArticulo", idArticulo) :
                new ObjectParameter("IdArticulo", typeof(int));
    
            var idTipoTallaParameter = idTipoTalla.HasValue ?
                new ObjectParameter("IdTipoTalla", idTipoTalla) :
                new ObjectParameter("IdTipoTalla", typeof(int));
    
            var idTallaParameter = idTalla.HasValue ?
                new ObjectParameter("IdTalla", idTalla) :
                new ObjectParameter("IdTalla", typeof(int));
    
            var idTipoEntradaParameter = idTipoEntrada.HasValue ?
                new ObjectParameter("IdTipoEntrada", idTipoEntrada) :
                new ObjectParameter("IdTipoEntrada", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var idOrdenCompraParameter = idOrdenCompra.HasValue ?
                new ObjectParameter("IdOrdenCompra", idOrdenCompra) :
                new ObjectParameter("IdOrdenCompra", typeof(int));
    
            var idReconteoParameter = idReconteo.HasValue ?
                new ObjectParameter("IdReconteo", idReconteo) :
                new ObjectParameter("IdReconteo", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_EntradaAlmacen", idAlmacenParameter, idArticuloParameter, idTipoTallaParameter, idTallaParameter, idTipoEntradaParameter, cantidadParameter, idEmpleadoParameter, idOrdenCompraParameter, idReconteoParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<string> sp_SalidaAlmacen(Nullable<int> idAlmacen, Nullable<int> idEmpleado, Nullable<int> cantidad, string descripcion)
        {
            var idAlmacenParameter = idAlmacen.HasValue ?
                new ObjectParameter("IdAlmacen", idAlmacen) :
                new ObjectParameter("IdAlmacen", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_SalidaAlmacen", idAlmacenParameter, idEmpleadoParameter, cantidadParameter, descripcionParameter);
        }
    }
}
